{"ast":null,"code":"import _slicedToArray from \"/Users/adaazev/Desktop/clubs.community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/adaazev/Desktop/clubs.community/src/searchbar.js\";\nimport { React, useState, useEffect } from \"react\";\n// import TextField from \"@mui/material/TextField\";\nimport { ReactDOM } from \"react\";\n\n// Note: the empty deps array [] means\n// this useEffect will run once\nfunction SearchBar() {\n  var _this = this;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoaded = _useState4[0],\n    setIsLoaded = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    items = _useState6[0],\n    setItems = _useState6[1]; //     set search query to empty string\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    q = _useState8[0],\n    setQ = _useState8[1]; //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n  var _useState9 = useState([\"capital\", \"name\"]),\n    _useState10 = _slicedToArray(_useState9, 1),\n    searchParam = _useState10[0];\n  useEffect(function () {\n    fetch(\"https://restcountries.eu/rest/v2/all\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setItems(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      name: \"search-form\",\n      id: \"search-form\",\n      className: \"search-input\",\n      placeholder: \"Search for...\",\n      value: q\n      /*\n      // set the value of our useState q\n      //  anytime the user types in the search box\n      */,\n      onChange: function onChange(e) {\n        return setQ(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Search countries here\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"card-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, items.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"article\", {\n        className: \"card\",\n        key: item.callingCodes,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-image\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.flag,\n        alt: item.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"card-name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"card-list\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }\n      }, \"population:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, item.population)), /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }\n      }, \"Region: \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 57\n        }\n      }, item.region)), /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }\n      }, \"Capital: \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 58\n        }\n      }, item.capital))))));\n    })));\n  }\n}\n\n// function SearchBar () {\n//     return (\n//       <div className=\"Search\">\n//         <h1>search</h1>\n//         <TextField\n//           id=\"outlined-basic\"\n//           variant=\"outlined\"\n//           fullWidth\n//           label=\"Search\"\n//         />\n\n//         <select\n//     /*\n//     // here we create a basic select input\n//     // we set the value to the selected value\n//     // and update the setFilterParam() state every time onChange is called\n//     */\n//       onChange={(e) => {\n//       setFilterParam(e.target.value);\n//        }}\n//        className=\"custom-select\"\n//        aria-label=\"Filter Countries By Region\">\n//         <option value=\"All\">Filter By Region</option>\n//         <option value=\"Africa\">Africa</option>\n//         <option value=\"Americas\">America</option>\n//         <option value=\"Asia\">Asia</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Oceania\">Oceania</option>\n//         </select>\n\n//         <span className=\"focus\"></span>\n//       </div>\n//     );\n// }\n\nexport default SearchBar;\n\n// function search(items) {\n//   return items.filter((item) => {\n// /*\n// // in here we check if our region is equal to our c state\n// // if it's equal to then only return the items that match\n// // if not return All the countries\n// */\n//   if (item.region == filterParam) {\n//       return searchParam.some((newItem) => {\n//         return (\n//           item[newItem]\n//               .toString()\n//               .toLowerCase()\n//               .indexOf(q.toLowerCase()) > -1\n//                    );\n//                });\n//            } else if (filterParam == \"All\") {\n//                return searchParam.some((newItem) => {\n//                    return (\n//                        item[newItem]\n//                            .toString()\n//                            .toLowerCase()\n//                            .indexOf(q.toLowerCase()) > -1\n//                    );\n//                });\n//            }\n//        });\n//    }","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","SearchBar","error","setError","isLoaded","setIsLoaded","items","setItems","q","setQ","searchParam","fetch","then","res","json","result","message","e","target","value","map","item","callingCodes","flag","name","population","region","capital"],"sources":["/Users/adaazev/Desktop/clubs.community/src/searchbar.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\n// import TextField from \"@mui/material/TextField\";\nimport { ReactDOM } from \"react\";\n\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    function SearchBar() {\n        const [error, setError] = useState(null);\n        const [isLoaded, setIsLoaded] = useState(false);\n        const [items, setItems] = useState([]);\n\n        //     set search query to empty string\n        const [q, setQ] = useState(\"\");\n        //     set search parameters\n        //     we only what to search countries by capital and name\n        //     this list can be longer if you want\n        //     you can search countries even by their population\n        // just add it to this array\n        const [searchParam] = useState([\"capital\", \"name\"]);\n\n        useEffect(() => {\n            fetch(\"https://restcountries.eu/rest/v2/all\")\n                .then((res) => res.json())\n                .then(\n                    (result) => {\n                        setIsLoaded(true);\n                        setItems(result);\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        setIsLoaded(true);\n                        setError(error);\n                    }\n                );\n        }, []);\n\n        if (error) {\n            return <>{error.message}</>;\n        } else if (!isLoaded) {\n            return <>loading...</>;\n        } else {\n            return (\n                <div className=\"wrapper\">\n                    <div className=\"search-wrapper\">\n                        <label htmlFor=\"search-form\">\n                            <input\n                                type=\"search\"\n                                name=\"search-form\"\n                                id=\"search-form\"\n                                className=\"search-input\"\n                                placeholder=\"Search for...\"\n                                value={q}\n                                /*\n                                // set the value of our useState q\n                                //  anytime the user types in the search box\n                                */\n                                onChange={(e) => setQ(e.target.value)}\n                            />\n                            <span className=\"sr-only\">Search countries here</span>\n                        </label>\n                    </div>\n                    <ul className=\"card-grid\">\n                        {items.map((item) => (\n                            <li>\n                                <article className=\"card\" key={item.callingCodes}>\n                                    <div className=\"card-image\">\n                                        <img src={item.flag} alt={item.name} />\n                                    </div>\n                                    <div className=\"card-content\">\n                                        <h2 className=\"card-name\">{item.name}</h2>\n                                        <ol className=\"card-list\">\n                                            <li>\n                                                population:{\" \"}\n                                                <span>{item.population}</span>\n                                            </li>\n                                            <li>\n                                                Region: <span>{item.region}</span>\n                                            </li>\n                                            <li>\n                                                Capital: <span>{item.capital}</span>\n                                            </li>\n                                        </ol>\n                                    </div>\n                                </article>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            );\n        }\n    }\n\n\n\n// function SearchBar () {\n//     return (\n//       <div className=\"Search\">\n//         <h1>search</h1>\n//         <TextField\n//           id=\"outlined-basic\"\n//           variant=\"outlined\"\n//           fullWidth\n//           label=\"Search\"\n//         />\n        \n//         <select\n//     /*\n//     // here we create a basic select input\n//     // we set the value to the selected value\n//     // and update the setFilterParam() state every time onChange is called\n//     */\n//       onChange={(e) => {\n//       setFilterParam(e.target.value);\n//        }}\n//        className=\"custom-select\"\n//        aria-label=\"Filter Countries By Region\">\n//         <option value=\"All\">Filter By Region</option>\n//         <option value=\"Africa\">Africa</option>\n//         <option value=\"Americas\">America</option>\n//         <option value=\"Asia\">Asia</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Oceania\">Oceania</option>\n//         </select>\n        \n//         <span className=\"focus\"></span>\n//       </div>\n//     );\n// }\n\nexport default SearchBar;\n\n\n// function search(items) {\n//   return items.filter((item) => {\n// /*\n// // in here we check if our region is equal to our c state\n// // if it's equal to then only return the items that match\n// // if not return All the countries\n// */\n//   if (item.region == filterParam) {\n//       return searchParam.some((newItem) => {\n//         return (\n//           item[newItem]\n//               .toString()\n//               .toLowerCase()\n//               .indexOf(q.toLowerCase()) > -1\n//                    );\n//                });\n//            } else if (filterParam == \"All\") {\n//                return searchParam.some((newItem) => {\n//                    return (\n//                        item[newItem]\n//                            .toString()\n//                            .toLowerCase()\n//                            .indexOf(q.toLowerCase()) > -1\n//                    );\n//                });\n//            }\n//        });\n//    }"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,QAAQ,QAAQ,OAAO;;AAE5B;AACA;AACA,SAASC,SAAS,GAAG;EAAA;EAAA,gBACSH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCI,KAAK;IAAEC,QAAQ;EAAA,iBACUL,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCM,QAAQ;IAAEC,WAAW;EAAA,iBACFP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BQ,KAAK;IAAEC,QAAQ,kBAEtB;EAAA,iBACkBT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvBU,CAAC;IAAEC,IAAI,kBACd;EACA;EACA;EACA;EACA;EAAA,iBACsBX,QAAQ,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAAA;IAA5CY,WAAW;EAElBX,SAAS,CAAC,YAAM;IACZY,KAAK,CAAC,sCAAsC,CAAC,CACxCC,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACzBF,IAAI,CACD,UAACG,MAAM,EAAK;MACRV,WAAW,CAAC,IAAI,CAAC;MACjBE,QAAQ,CAACQ,MAAM,CAAC;IACpB,CAAC;IACD;IACA;IACA;IACA,UAACb,KAAK,EAAK;MACPG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CACJ;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACP,oBAAO,0CAAGA,KAAK,CAACc,OAAO,CAAI;EAC/B,CAAC,MAAM,IAAI,CAACZ,QAAQ,EAAE;IAClB,oBAAO,uDAAe;EAC1B,CAAC,MAAM;IACH,oBACI;MAAK,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpB;MAAK,SAAS,EAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC3B;MAAO,OAAO,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxB;MACI,IAAI,EAAC,QAAQ;MACb,IAAI,EAAC,aAAa;MAClB,EAAE,EAAC,aAAa;MAChB,SAAS,EAAC,cAAc;MACxB,WAAW,EAAC,eAAe;MAC3B,KAAK,EAAEI;MACP;AAChC;AACA;AACA,QAHgC;MAIA,QAAQ,EAAE,kBAACS,CAAC;QAAA,OAAKR,IAAI,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACxC,eACF;MAAM,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,2BAA6B,CAClD,CACN,eACN;MAAI,SAAS,EAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACpBb,KAAK,CAACc,GAAG,CAAC,UAACC,IAAI;MAAA,oBACZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAS,SAAS,EAAC,MAAM;QAAC,GAAG,EAAEA,IAAI,CAACC,YAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC7C;QAAK,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvB;QAAK,GAAG,EAAED,IAAI,CAACE,IAAK;QAAC,GAAG,EAAEF,IAAI,CAACG,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACrC,eACN;QAAK,SAAS,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzB;QAAI,SAAS,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEH,IAAI,CAACG,IAAI,CAAM,eAC1C;QAAI,SAAS,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBACgB,GAAG,eACf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAOH,IAAI,CAACI,UAAU,CAAQ,CAC7B,eACL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,4BACY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAOJ,IAAI,CAACK,MAAM,CAAQ,CACjC,eACL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,6BACa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAOL,IAAI,CAACM,OAAO,CAAQ,CACnC,CACJ,CACH,CACA,CACT;IAAA,CACR,CAAC,CACD,CACH;EAEd;AACJ;;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe1B,SAAS;;AAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}