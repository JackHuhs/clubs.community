{"ast":null,"code":"// import { React, useState, useEffect } from \"react\";\n// // import TextField from \"@mui/material/TextField\";\n// import { ReactDOM } from \"react\";\n\n//     // Note: the empty deps array [] means\n//     // this useEffect will run once\n//     function SearchBar() {\n//         const [error, setError] = useState(null);\n//         const [isLoaded, setIsLoaded] = useState(false);\n//         const [items, setItems] = useState([]);\n\n//         //     set search query to empty string\n//         const [q, setQ] = useState(\"\");\n//         //     set search parameters\n//         //     we only what to search countries by capital and name\n//         //     this list can be longer if you want\n//         //     you can search countries even by their population\n//         // just add it to this array\n//         const [searchParam] = useState([\"capital\", \"name\"]);\n\n//         useEffect(() => {\n//             fetch(\"https://restcountries.eu/rest/v2/all\")\n//                 .then((res) => res.json())\n//                 .then(\n//                     (result) => {\n//                         setIsLoaded(true);\n//                         setItems(result);\n//                     },\n//                     // Note: it's important to handle errors here\n//                     // instead of a catch() block so that we don't swallow\n//                     // exceptions from actual bugs in components.\n//                     (error) => {\n//                         setIsLoaded(true);\n//                         setError(error);\n//                     }\n//                 );\n//         }, []);\n\n//         if (error) {\n//             return <>{error.message}</>;\n//         } else if (!isLoaded) {\n//             return <>loading...</>;\n//         } else {\n//             return (\n//                 <div className=\"wrapper\">\n//                     <div className=\"search-wrapper\">\n//                         <label htmlFor=\"search-form\">\n//                             <input\n//                                 type=\"search\"\n//                                 name=\"search-form\"\n//                                 id=\"search-form\"\n//                                 className=\"search-input\"\n//                                 placeholder=\"Search for...\"\n//                                 value={q}\n//                                 /*\n//                                 // set the value of our useState q\n//                                 //  anytime the user types in the search box\n//                                 */\n//                                 onChange={(e) => setQ(e.target.value)}\n//                             />\n//                             <span className=\"sr-only\">Search countries here</span>\n//                         </label>\n//                     </div>\n//                     <ul className=\"card-grid\">\n//                         {items.map((item) => (\n//                             <li>\n//                                 <article className=\"card\" key={item.callingCodes}>\n//                                     <div className=\"card-image\">\n//                                         <img src={item.flag} alt={item.name} />\n//                                     </div>\n//                                     <div className=\"card-content\">\n//                                         <h2 className=\"card-name\">{item.name}</h2>\n//                                         <ol className=\"card-list\">\n//                                             <li>\n//                                                 population:{\" \"}\n//                                                 <span>{item.population}</span>\n//                                             </li>\n//                                             <li>\n//                                                 Region: <span>{item.region}</span>\n//                                             </li>\n//                                             <li>\n//                                                 Capital: <span>{item.capital}</span>\n//                                             </li>\n//                                         </ol>\n//                                     </div>\n//                                 </article>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             );\n//         }\n//     }\n\n// // function SearchBar () {\n// //     return (\n// //       <div className=\"Search\">\n// //         <h1>search</h1>\n// //         <TextField\n// //           id=\"outlined-basic\"\n// //           variant=\"outlined\"\n// //           fullWidth\n// //           label=\"Search\"\n// //         />\n\n// //         <select\n// //     /*\n// //     // here we create a basic select input\n// //     // we set the value to the selected value\n// //     // and update the setFilterParam() state every time onChange is called\n// //     */\n// //       onChange={(e) => {\n// //       setFilterParam(e.target.value);\n// //        }}\n// //        className=\"custom-select\"\n// //        aria-label=\"Filter Countries By Region\">\n// //         <option value=\"All\">Filter By Region</option>\n// //         <option value=\"Africa\">Africa</option>\n// //         <option value=\"Americas\">America</option>\n// //         <option value=\"Asia\">Asia</option>\n// //         <option value=\"Europe\">Europe</option>\n// //         <option value=\"Oceania\">Oceania</option>\n// //         </select>\n\n// //         <span className=\"focus\"></span>\n// //       </div>\n// //     );\n// // }\n\n// export default SearchBar;\n\n// // function search(items) {\n// //   return items.filter((item) => {\n// // /*\n// // // in here we check if our region is equal to our c state\n// // // if it's equal to then only return the items that match\n// // // if not return All the countries\n// // */\n// //   if (item.region == filterParam) {\n// //       return searchParam.some((newItem) => {\n// //         return (\n// //           item[newItem]\n// //               .toString()\n// //               .toLowerCase()\n// //               .indexOf(q.toLowerCase()) > -1\n// //                    );\n// //                });\n// //            } else if (filterParam == \"All\") {\n// //                return searchParam.some((newItem) => {\n// //                    return (\n// //                        item[newItem]\n// //                            .toString()\n// //                            .toLowerCase()\n// //                            .indexOf(q.toLowerCase()) > -1\n// //                    );\n// //                });\n// //            }\n// //        });\n// //    }","map":{"version":3,"names":[],"sources":["/Users/adaazev/Desktop/clubs.community/src/searchbar.js"],"sourcesContent":["// import { React, useState, useEffect } from \"react\";\n// // import TextField from \"@mui/material/TextField\";\n// import { ReactDOM } from \"react\";\n\n//     // Note: the empty deps array [] means\n//     // this useEffect will run once\n//     function SearchBar() {\n//         const [error, setError] = useState(null);\n//         const [isLoaded, setIsLoaded] = useState(false);\n//         const [items, setItems] = useState([]);\n\n//         //     set search query to empty string\n//         const [q, setQ] = useState(\"\");\n//         //     set search parameters\n//         //     we only what to search countries by capital and name\n//         //     this list can be longer if you want\n//         //     you can search countries even by their population\n//         // just add it to this array\n//         const [searchParam] = useState([\"capital\", \"name\"]);\n\n//         useEffect(() => {\n//             fetch(\"https://restcountries.eu/rest/v2/all\")\n//                 .then((res) => res.json())\n//                 .then(\n//                     (result) => {\n//                         setIsLoaded(true);\n//                         setItems(result);\n//                     },\n//                     // Note: it's important to handle errors here\n//                     // instead of a catch() block so that we don't swallow\n//                     // exceptions from actual bugs in components.\n//                     (error) => {\n//                         setIsLoaded(true);\n//                         setError(error);\n//                     }\n//                 );\n//         }, []);\n\n//         if (error) {\n//             return <>{error.message}</>;\n//         } else if (!isLoaded) {\n//             return <>loading...</>;\n//         } else {\n//             return (\n//                 <div className=\"wrapper\">\n//                     <div className=\"search-wrapper\">\n//                         <label htmlFor=\"search-form\">\n//                             <input\n//                                 type=\"search\"\n//                                 name=\"search-form\"\n//                                 id=\"search-form\"\n//                                 className=\"search-input\"\n//                                 placeholder=\"Search for...\"\n//                                 value={q}\n//                                 /*\n//                                 // set the value of our useState q\n//                                 //  anytime the user types in the search box\n//                                 */\n//                                 onChange={(e) => setQ(e.target.value)}\n//                             />\n//                             <span className=\"sr-only\">Search countries here</span>\n//                         </label>\n//                     </div>\n//                     <ul className=\"card-grid\">\n//                         {items.map((item) => (\n//                             <li>\n//                                 <article className=\"card\" key={item.callingCodes}>\n//                                     <div className=\"card-image\">\n//                                         <img src={item.flag} alt={item.name} />\n//                                     </div>\n//                                     <div className=\"card-content\">\n//                                         <h2 className=\"card-name\">{item.name}</h2>\n//                                         <ol className=\"card-list\">\n//                                             <li>\n//                                                 population:{\" \"}\n//                                                 <span>{item.population}</span>\n//                                             </li>\n//                                             <li>\n//                                                 Region: <span>{item.region}</span>\n//                                             </li>\n//                                             <li>\n//                                                 Capital: <span>{item.capital}</span>\n//                                             </li>\n//                                         </ol>\n//                                     </div>\n//                                 </article>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             );\n//         }\n//     }\n\n\n\n// // function SearchBar () {\n// //     return (\n// //       <div className=\"Search\">\n// //         <h1>search</h1>\n// //         <TextField\n// //           id=\"outlined-basic\"\n// //           variant=\"outlined\"\n// //           fullWidth\n// //           label=\"Search\"\n// //         />\n        \n// //         <select\n// //     /*\n// //     // here we create a basic select input\n// //     // we set the value to the selected value\n// //     // and update the setFilterParam() state every time onChange is called\n// //     */\n// //       onChange={(e) => {\n// //       setFilterParam(e.target.value);\n// //        }}\n// //        className=\"custom-select\"\n// //        aria-label=\"Filter Countries By Region\">\n// //         <option value=\"All\">Filter By Region</option>\n// //         <option value=\"Africa\">Africa</option>\n// //         <option value=\"Americas\">America</option>\n// //         <option value=\"Asia\">Asia</option>\n// //         <option value=\"Europe\">Europe</option>\n// //         <option value=\"Oceania\">Oceania</option>\n// //         </select>\n        \n// //         <span className=\"focus\"></span>\n// //       </div>\n// //     );\n// // }\n\n// export default SearchBar;\n\n\n// // function search(items) {\n// //   return items.filter((item) => {\n// // /*\n// // // in here we check if our region is equal to our c state\n// // // if it's equal to then only return the items that match\n// // // if not return All the countries\n// // */\n// //   if (item.region == filterParam) {\n// //       return searchParam.some((newItem) => {\n// //         return (\n// //           item[newItem]\n// //               .toString()\n// //               .toLowerCase()\n// //               .indexOf(q.toLowerCase()) > -1\n// //                    );\n// //                });\n// //            } else if (filterParam == \"All\") {\n// //                return searchParam.some((newItem) => {\n// //                    return (\n// //                        item[newItem]\n// //                            .toString()\n// //                            .toLowerCase()\n// //                            .indexOf(q.toLowerCase()) > -1\n// //                    );\n// //                });\n// //            }\n// //        });\n// //    }"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}